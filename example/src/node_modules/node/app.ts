import * as potato from '@po-to/potato';
import * as url from 'url';
import * as http from 'http';

import request = require('request');



let controllers: potato.IControllers = (function(){
    let map = require('./controllers.json');
    let controllers:{[key:string]:potato.Controller} = {};
    for (let key in map) {
        controllers[key] = require(map[key]).instance;
    }
    return {
        getController: function (path:string) : potato.Controller | null {
            return controllers[path] || null;
        }
    };
})()



export class Core extends potato.Core {

    protected readonly _controllers = controllers;
   
   
    toUrl(req:potato.Request, toAmd?: boolean, noArgs?:boolean): string {
        let str = super.toUrl(req,toAmd,noArgs);
        // for(let folder in siteMap){
        //     if(str.startsWith(folder)){
        //         return siteMap[folder] + str.replace(folder,'');
        //     }
        // }
        return '';
    }
}
export let core: Core = new Core();